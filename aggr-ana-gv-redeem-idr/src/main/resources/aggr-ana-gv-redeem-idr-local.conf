// TODO: Fill up local config file
app.name = aggr-ana-gv-redeem-idr

// In ISO8601 Format
// e.g. 2019-01-01T00:00:00+08:00
start-date: ${?START_DATE}
end-date: ${?END_DATE}

// Download datalake locally from https://github.com/traveloka/tvlk-eci-scripts/tree/master/datalake_sync
// Flattener bucket, consider using local path once datalake is downloaded locally
flattener-src: "s3a://ecidtpl-data-warehouse-307648842078-c5fc76de0f09ad0d/data_warehouse"
flattener-srcdtl: "s3a://ecidtpl-datalake-307648842078-78efbb49fefabe80"

// The bucket name of aggregator output (CSV)
aggregator-dest: ${HOME}"/ecidtpl-aggregrator-output"

// The schema name in data warehouse
schema-name: "anaplan"

// The table name in data warehouse
table-name: "gv_redeem_idr"

// The partition key to split the reports into many deltas
// So the key is `booking_issue_date`, which is an indexed column in the warehouse table
partition-key: "redemption_date"

statusmanager {
  url = "localhost"
  username = "application"
  password = "application"
  timeout = 10s
}

// Only needed in Local mode for spark to write to s3
// Set via environment variables
aws-access-key-id: ${?AWS_ACCESS_KEY_ID}
aws-secret-access-key: ${?AWS_SECRET_ACCESS_KEY}
aws-session-token: ${?AWS_SESSION_TOKEN}

slack {
  channel: ""
  token: ""
}